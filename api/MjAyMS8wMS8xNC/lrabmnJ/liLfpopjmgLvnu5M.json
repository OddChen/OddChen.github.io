{"title":"学期刷题总结","date":"2021-01-14T03:01:53.000Z","date_formatted":{"ll":"2021年1月14日","L":"2021/01/14","MM-DD":"01-14"},"link":"2021/01/14/学期刷题总结","comments":true,"tags":["LeetCode"],"updated":"2021-01-14T08:37:56.326Z","content":"<p><img src=\"https://cdn.example.com/学期刷题总结/8_Snowy2_1080.jpg?m=webp&q=80\" class=\"φcy\" alt=\"snow\"></p>\n<h3 id=\"十月份开始断断续续的做题，语言是javascript，大概只做了30道左右，还都是简单题，数据结构和算法基础确实差远了\">十月份开始断断续续的做题，语言是<em>JavaScript</em>，大概只做了30道左右，还都是简单题，数据结构和算法基础确实差远了......<a href=\"#十月份开始断断续续的做题，语言是javascript，大概只做了30道左右，还都是简单题，数据结构和算法基础确实差远了\" title=\"十月份开始断断续续的做题，语言是JavaScript，大概只做了30道左右，还都是简单题，数据结构和算法基础确实差远了......\"></a></h3><h3 id=\"学期末了还是要稍微总结一下，主要是这些题里面的知识点和问题\">学期末了还是要稍微总结一下，主要是这些题里面的知识点和问题<a href=\"#学期末了还是要稍微总结一下，主要是这些题里面的知识点和问题\" title=\"学期末了还是要稍微总结一下，主要是这些题里面的知识点和问题\"></a></h3><hr>\n<p>虽然题目刷的不多，不过JS部分倒是真的发现了很多没记住的地方，巩固了不少JS的基础知识，算法方面说实话以前学过的都忘了，真的是硬着头皮在做题，刚开始真的有点难受（当然现在也是，不过就是心态好了），数据结构和基本的算法真的需要好好复习一下。</p>\n<p>1.<strong>哈希表</strong><br>散列表（Hash table，也叫哈希表），是根据关键码值(Key value)而直接进行访问的数据结构。<br>题号 : 49. 字母异位词分组 217.存在重复元素    </p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var groupAnagrams &#x3D; function(strs) &#123;</span><br><span class=\"line\">    let newlist &#x3D; &#123;&#125;;</span><br><span class=\"line\">    sortlist &#x3D; (str) &#x3D;&gt; &#123;return str.split(&quot;&quot;).sort().join(&quot;&quot;);&#125; </span><br><span class=\"line\">    for(let i&#x3D;0; i&lt;strs.length; i++)&#123;</span><br><span class=\"line\">        let key &#x3D; sortlist(strs[i]);</span><br><span class=\"line\">        if(newlist[key])&#123;</span><br><span class=\"line\">            newlist[key].push(strs[i]);</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            newlist[key] &#x3D; [strs[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return Object.values(newlist);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>2.<strong>位移运算</strong><br>num&gt;&gt;1 表示移位运算，就是把num转换成二进制表示后所有位向后移动一位，高位补0。<br>题号：1342. 将数字变成0的操作次数    </p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var numberOfSteps  &#x3D; function(num) &#123;</span><br><span class=\"line\">    let count &#x3D; 0;</span><br><span class=\"line\">    if(num&#x3D;&#x3D;&#x3D;0) return 0;</span><br><span class=\"line\">    while(num)&#123;</span><br><span class=\"line\">        if(num%2&#x3D;&#x3D;&#x3D;1)&#123;</span><br><span class=\"line\">            num -&#x3D; 1;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            num &#x3D; num&#x2F;2;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return count;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>3.<strong>取模</strong><br>js和c对取模的操作并不同，n/10的结果是有小数点的，所以需要使用到 <em>Math.floor(x)</em> 方法，取小于x的整数。<br>题号：1281. 整数的各位积和之差    </p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var subtractProductAndSum &#x3D; function(n) &#123; </span><br><span class=\"line\">    let multi &#x3D; 1;</span><br><span class=\"line\">    let sum &#x3D; 0;</span><br><span class=\"line\">    let x;</span><br><span class=\"line\">    do&#123;</span><br><span class=\"line\">        x &#x3D; n%10;</span><br><span class=\"line\">        multi *&#x3D; x;</span><br><span class=\"line\">        sum +&#x3D; x;</span><br><span class=\"line\">        &#x2F;&#x2F;n &#x2F;&#x3D; 10; In js is wrong! amz!!!</span><br><span class=\"line\">        n &#x3D; Math.floor(n&#x2F;10);</span><br><span class=\"line\">    &#125; while(n!&#x3D;&#x3D;0);</span><br><span class=\"line\">    return multi-sum;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","next":{"title":"Ant Design Pro 官方查询表格在暗色主题下的问题","link":"2020/02/12/Ant-Design-Pro-官方查询表格在暗色主题下的问题"},"plink":"http://oddchen.xyz/2021/01/14/学期刷题总结/","toc":[{"id":"十月份开始断断续续的做题，语言是javascript，大概只做了30道左右，还都是简单题，数据结构和算法基础确实差远了","title":"十月份开始断断续续的做题，语言是JavaScript，大概只做了30道左右，还都是简单题，数据结构和算法基础确实差远了......","index":"1"},{"id":"学期末了还是要稍微总结一下，主要是这些题里面的知识点和问题","title":"学期末了还是要稍微总结一下，主要是这些题里面的知识点和问题","index":"2"}],"reward":true,"copyright":{"author":"OddChen","link":"<a href=\"http://oddchen.xyz/2021/01/14/学期刷题总结/\" title=\"学期刷题总结\">http://oddchen.xyz/2021/01/14/学期刷题总结/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}